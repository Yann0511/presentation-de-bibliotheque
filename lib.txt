Presentation
VERT

				/////////////////////////////////////////////////////////////////
				//                                                             //
				//        Présentation des librairies ctype.h et limit.h       //
				//                                                             //
				//                                                             //
				//                                                             //
				//                                                             //
				//  Etudiants: Dosseh David , Godonou Israel et Olou Yann      //
				//                                                             //
				/////////////////////////////////////////////////////////////////
				//                                                             //
				//                      Licence Informatique                   //
				/**                         IMSP - UAC                        **/
				//                                                             //
				/////////////////////////////////////////////////////////////////
BLANC
FiN

ctype.h

JAUNE
CLI
				***********   *************  *       *   **********    ***********
	       		        *                   *         *     *    *        *    *
		 		*                   *          *   *     *        *    *
		  		*                   *            *       **********    *********
		  		*                   *            *       *             *
		  		*                   *            *       *             *
		  		***********         *            *       *             ***********
BLANC


			Cette librairie propose un ensemble de fonction de traitement de caractères. On peut classifier
		    cet ensemble de fonctions en deux catégories : les fonctions de test, pour savoir si un caractère
		    est d'une certaine nature, et les fonctions de transformation, notamment utiles pour les changements
		    de casse(minuscule, majuscule).

		       Attention : ces fonctions supportent uniquement la table d'encodage ASCII (American Standard
		    Code for Information Interchange). Cette table ne définit que 128 caractères (de code 0 à 127).
		    Ainsi, un caractère « é » (définit dans les standards ISO-8859-1, UTF-8, UTF-16, ...) ne sera pas
		    pris en compte : il n'est donc pas un caractère alpha-numérique.

CYAN
					Les fonctions de test de caractères
		    
BLANC
		     Ces fonctions sont très faciles à identifier : elles sont toutes préfixées de "is". Elles renvoient
		 toutes une valeur entière typée int, mais vous devriez l'interpréter en temps que booléen
		 (vrai ou faux). Voici la liste des fonctions de cette catégorie. 
JAUNE

       	      ************************************************************************************************************
              | id  |    Nom   |   Type     | 	      	       	   Description				      |	 Depuis  |
	      ************************************************************************************************************	 
	      |     |          |            |                                                                 |          |
	      |	 1  |  isalnum | fonction   |	Vérifie si un caractère est alpha-numérique. 		      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |	 2  |  isalpha | fonction   |	Vérifie si un caractère est alphabétique. 		      |	  C89	 |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
      	      |     |          |            |                                                                 |          |
	      |  3  |  isblank | fonction   |	Vérifie si un caractère est blanc ou non. 	 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  4  |  iscntrl | fonction   |	Vérifie si l'on a à faire à un caractère de contrôle. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  5  |  isdigit | fonction   |	Vérifie si un caractère est un chiffre. 		      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
	      |     |          |            |                                                                 |          |
	      |  6  |  isgraph | fonction   |	Vérifie si un caractère posséde une représentation graphique. |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  7  |  islower | fonction   | 	Vérifie si un caractère est une lettre minuscule. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  8  |  isprint | fonction   |	Vérifie si un caractère est affichable (printable) ou non.    |	  C89    |
	      |     |          |            |                                                                 |          |
              ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  9  |  ispunct | fonction   |	Vérifie si l'on a à faire à un caractère de ponctuation.      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
	      |     |          |            |                                                                 |          |
	      | 10  |  isspace | fonction   |  Vérifie si l'on a à faire à un caractère d'espacement. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
              ************************************************************************************************************ 
      	      |     |          |            |                                                                 |          |
	      | 11  |  isupper | fonction   |	Vérifie si un caractère est une lettre majuscule. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  12 |  isxdigit| fonction   |	Vérifie si un caractère est un chiffre hexadécimal. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
CYAN


					Les fonctions de transformation de caractères
			
JAUNE

		 ********************************************************************************************************
		 | id  |  Nom       |	  Type	   |			Description			   |  Depuis    |
		 ********************************************************************************************************	  
		 |     |            |              |                                                       |            |
		 |  13 | tolower    |	fonction   |	Transforme une lettre majuscule en  minuscule.     |	C89     |
		 |     |            |              |                                                       |            |
		 ********************************************************************************************************	
		 |     |            |              |                                                       |            |
		 |  14 | toupper    |	fonction   |	Transforme une lettre minuscule en  majuscule.  |	C89     |
		 |     |            |              |                                                       |            |
		 ********************************************************************************************************
BLANC
FiN


isalnum
JAUNE
						*********************************
	       					*                               *
	       					* int isalnum( int character ); *
	       					*                               *
				                *********************************
BLANC

				Cette fonction permet de tester si un caractère est alpha-numérique ou non.
			Un caractère sera considéré comme alpha-numérique s'il est une lettre
			(minuscule ou majuscule) ou un chiffre. Rappel : les fonctions de cette
			librairie ne traitent que les caractères purs ASCII. Les lettres accentuées
			ne seront donc pas considérées comme des caractères alpha-numériques.

CYAN
						   Valeur de retour
   
BLANC
				La valeur de retour doit être interprétée en tant que valeur booléenne.
			Une valeur positive non nulle signifiera qu'il s'agit bien d'un caractère
			alpha-numérique. La valeur 0 indiquera qu'il ne s'agit pas d'un caractère
			apha-numérique.
JAUNE

			**********************************************************************************
  			*				Exemple de code			                 *
  			*                                                                                *
  			*	    #include <ctype.h>                                                   *
  			*	    #include <stdbool.h>                                                 *
  			*	    #include <stdio.h>                                                   *
 			*	    #include <stdlib.h>                                                  *
  			*	    #include <string.h>                                                  *
  			*                                                                                *
  			*	    int main()                                                           *
  			*	    {                                                                    *
  			*                                                                                *
  			*		char buffer[80];                                                 *
  			*		printf( "Entre ton login (juste alpha-numeriques):");            *
  			* 		scanf( "%s", buffer );                                           *
  			*                                                                                *
			*  		bool isCorrect = true;                                           *
  			*  		size_t length = strlen( buffer );                                *
  			*		                                                                 *
  			*  		for( int i=0; i<length; i++ )                                    *
  			*		     if ( isalnum( buffer[i] ) == false )                        *
  			*          	     	isCorrect = false;                                       *
  			*                                                                                *
  			*		if ( isCorrect )                                                 *
  			*      	   printf( "Ton login est correct\n" );                            	 *
  			*                                                                                *
  			*		else                                                             *
  			*		   printf( "Ton  login n'est pas correct\n" );                   *
  			*		                                                                 *
  			*		return EXIT_SUCCESS;                                             *
  			*	     }		                                                         *
  			*                                                                                *
  			**********************************************************************************
BLANC
FiN


isalpha
JAUNE
					        ********************************
						*                              *
						* int isalpha( int character );*
						*                              *
						********************************
BLANC

				Cette fonction permet de tester si un caractère est alphabétique ou non.
			Un caractère sera considéré comme alphabétique s'il est une lettre minuscule
			ou une lettre majuscule. Rappel : les fonctions de cette librairie ne traitent
			que les caractères purs ASCII. Les lettres accentuées ne seront donc pas considérées
			comme des caractères alphabétiques.

CYAN
						     Valeur de retour
      
BLANC
				La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
			positive non nulle signifiera qu'il s'agit bien d'un caractère alphabétique. La valeur
			0 indiquera qu'il ne s'agit pas d'un caractère aphabétique.

JAUNE
			****************************************************************************************
  			*				     Exemple de code                                   *
  			*                                                                                      *
  			*	#include <ctype.h>                                                             *
  			* 	#include <stdbool.h>                                                           *
  			*	#include <stdio.h>                                                             *
  			*	#include <stdlib.h>                                                            *
  			*	#include <string.h>                                                            *
  			*                                                                                      *
  			*	int main()                                                                     *
  			*	{                                                                              *
  			*	     char buffer[80];                                                          *
			*	     printf("Entre ton nom : " );                                              *
  			*  	     scanf( "%s", buffer );                                                    *
  			*                                                                                      *
  			* 	     bool isCorrect = true;                                                    *
  			* 	     size_t length = strlen( buffer );                                         *
  			*                                                                                      *
  			*	     for( int i=0; i < length; i++ )                                           *
  			*          	  if ( isalpha( buffer[i] ) == false && isblank( buffer[i] ) == false )*
  			*          	     isCorrect = false;	                                               *
  			*                                                                                      *
  			*          if ( isCorrect )                                                            *
  			*           	  printf( "Ton nom (%s) est correct\n", buffer );                      *
  			*                                                                                      *
  			*	     else                                                                      *
  			*	     	  printf( "Ton nom  (%s) n'est pas correct\n", buffer );               *
  			*                                                                                      *
			*           return EXIT_SUCCESS;                                                       *
  			*	}                                                                              *
  			*                                                                                      *
			*****************************************************************************************
BLANC
FiN


isblank
JAUNE
						*******************************
						*                             *
						*int isblank( int character );*
						*                             *
						*******************************
BLANC

				Cette fonction permet de tester si un caractère est blanc ou non.
			Deux caractères sont considérés comme des blancs : l'espace et la tabulation.
			Par contre, un retour à la ligne ne sera pas considéré comme un caractère blanc.
			La fonction "isspace" est relativement proche, cependant cette dernière valide plus
			de caractères et notamment ceux relatifs aux retours à la ligne (en fonction du
			système d'exploitation considéré).

CYAN
						    Valeur de retour
	
BLANC
				La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
			positive non nulle signifiera qu'il s'agit bien d'un caractère blanc. La valeur 0
			indiquera qu'il ne s'agit pas d'un caractère blanc.

JAUNE
			*******************************************************************************
  			*				Exemple de code                               *
  			*                                                                             *
  			*	#include <ctype.h>                                                    *
  			* 	#include <stdio.h>                                                    *
  			*	#include <stdlib.h>                                                   *
  			*                                                                             *
  			*                                                                             *
  			*	int main()                                                            *
  			*	{                                                                     *
  			*                                                                             *
  			*	    printf( "%d\n", isblank( ' ' ) );                                 *
  			* 	    printf( "%d\n", isblank( '\t' ) );                                *
  			*  	    printf( "%d\n", isblank( '\n' ) );                                *
			*           printf("%d \n", isblank('\0'));	                              *
  			*  	    return EXIT_SUCCESS;                                              *
  			*	}                                                                     *
  			*                                                                             *
			*******************************************************************************
BLANC
FiN


iscntrl
JAUNE
					    *******************************
					    *                             *
        				    *int iscntrl( int character );*
					    *                             *
					    *******************************
BLANC

			Le standard ASCII (American Standard Code for Information Interchange), dont dérive
		tous les autres systèmes de codage de caractères, définit 33 caractères de contrôles.
		Ces caractères ont leurs codes numériques compris en 0 et 31 plus la valeur 127.
		La fonction iscntrl permet donc de savoir si un caractère ASCII fait partie de cet ensemble ou non.

CYAN
						Valeur de retour
BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
		positive non nulle signifiera qu'il s'agit bien d'un caractère de contrôle.
		La valeur 0 indiquera qu'il ne s'agit pas d'un caractère de contrôle.

JAUNE
		     ******************************************************************************************
  		     *					    Exemple de code                                   *
  		     *                                                                                        *
  		     *	#include <ctype.h>                                                                    *
  		     *	#include <stdio.h>                                                                    *
  		     *	#include <stdlib.h>                                                                   *
  		     *                                                                                        *
  		     * 	size_t strcpyWithoutControlCharacters( char * dest, const char * source )             *
  		     *	{                                                                                     *
  		     *                                                                                        *
  		     *	    size_t counter = 0;                                                               *
  		     * 	    char currentCharacter;                                                            *
  		     * 	    do                                                                                *
  		     *	    {                                                                                 *
		     *		currentCharacter = *source++;                                                 *
  		     *       	if ( ! iscntrl( currentCharacter ) )                                          *
  		     *		{                                                                             *
  		     *		    *dest++ = currentCharacter;                                               *
  		     *          	    counter ++;                                                       *
   		     *     	}                                                                             *
  		     *          }while ( currentCharacter != '\0' );                                          *
  		     *                                                                                        *
  		     *          *dest = '\0';                                                                 *
  		     *                                                                                        *
  		     *  	    return counter;                                                           *
  		     *	}                                                                                     *
  		     *                                                                                        *
  		     *	int main()                                                                            *
  		     *	{                                                                                     *
  		     *                                                                                        *
  		     *	     const char * original = "Hello\tWorld\nBye\r";                                   *
  		     *          char buffer[ 20 ];                                                            *
  		     *                                                                                        *
  		     *    	     size_t length = strcpyWithoutControlCharacters( buffer, original );      *
   		     *                                                                                        *
  		     *  	     printf( "strlen(\"%s\") == %zu\n", buffer, length );                     *
  		     *                                                                                        *
  		     *  	     return EXIT_SUCCESS;                                                     *
  		     *	}                                                                                     *
  		     *                                                                                        *
		     ******************************************************************************************
BLANC
FiN


isdigit
JAUNE
						*******************************
						*                             *
        					*int isdigit( int character );*
						*                             *
						*******************************
BLANC
			Cette fonction permet de tester si un caractère est un chiffre décimal ou non.

CYAN
      Valeur de retour
      
BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
		positive non nulle signifiera qu'il s'agit bien d'un chiffre décimal. La valeur 0
		indiquera qu'il ne s'agit pas d'un chiffre décimal.
JAUNE

			******************************************************************************
  			*				Exemple de code                              *
  			*                                                                            *
  			*	#include <ctype.h>                                                   *
  			*	#include <stdbool.h>                                                 *
  			*	#include <stdio.h>                                                   *
  			*	#include <stdlib.h>                                                  *
  			*	#include <string.h>                                                  *
  			*                                                                            *
  			*	int main()                                                           *
  			*	{                                                                    *
  			*                                                                            *
  			*	    char buffer[80];                                                 *
  			* 	    printf( "Entre ton texte : " );                                  *
  			*  	    scanf( "%s", buffer );                                           *
  			*                                                                            *
  			*  	    bool isCorrect = true;                                           *
  			*  	    size_t length = strlen( buffer );                                *
  			*  	    for( int i=0; i < length; i++ )                                  *
  			*		if ( ! isdigit( buffer[i] ) )                                *
  			*          	   isCorrect = false;                                        *
  			*                                                                            *
  			*  	    if ( isCorrect )                                                 *
  			*              printf( "Ton texte (%s) est un nombre\n", buffer );           *
  			*                                                                            *
  			*	    else                                                             *
  			*		printf( "Ton texte (%s) n'est pas un nombre\n", buffer );    *
  			*                                                                            *
  			*          return EXIT_SUCCESS;                                              *
  			*     }                                                                      *
  			*                                                                            *
  			******************************************************************************
BLANC
FiN


isgraph
JAUNE
						*******************************
						*                             *
						*int isgraph( int character );*
						*                             *
						*******************************
BLANC

			Cette fonction permet de tester si un caractère possède une représentation graphique
		ou non. Les caractères ASCII, exceptés les caractères de contrôles et le caractère
		d'espace, ont une représentation graphique (visuelle).

CYAN
						 Valeur de retour

BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
		positive non nulle signifiera qu'il s'agit bien d'un caractère possédant une représentation
		graphique. La valeur 0 indiquera qu'il ne s'agit pas d'un caractère ayant une représentation visuelle.
JAUNE

		   *****************************************************************************************
  		   *					Exemple de code					   *
  		   *                                                                                       *
  		   *	#include <assert.h>                                                                *
  		   *	#include <ctype.h>                                                                 *
  		   *	#include <stdio.h>                                                                 *
  		   *	#include <stdlib.h>                                                                *
  		   *	#include <string.h>                                                                *
  		   *                                                                                       *
  		   *	int main()                                                                         *
  		   *	{                                                                                  *
  		   *                                                                                       *
  		   *	      char * originalString = "Hello\nWorld Final\tWord";                          *
  		   * 	      size_t length = strlen( originalString );                                    *
  		   * 	      size_t counter = 0;                                                          *
  		   *                                                                                       *
  		   * 	      for( size_t i=0; i<length; i++ )                                             *
  		   *           	   if ( isgraph( originalString[i] ) )                                     *  
  		   *		   {                                                                       *
  		   *			printf( "%c", originalString[i] );                                 *
  		   *         		counter ++;                                                        *
  		   *     	   }                                                                       *
  		   *                                                                                       *
  		   *           printf( "\n" );                                                             *
  		   *           assert( counter == 19 );                                                    *
		   *                                                                                       *
  		   *           return EXIT_SUCCESS;                                                        *
  		   *      }                                                                                *
  		   *                                                                                       *
  		   *****************************************************************************************
BLANC
FiN


islower
JAUNE
						*******************************
						*                             *
        					*int islower( int character );*
						*                             *
						*******************************

BLANC
			Cette fonction permet de tester si un caractère donné est une lettre minuscule ou non.
		Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
		Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
		De plus les caractères ne présentant même pas une lettre ne seront donc pas considérés comme une minuscule.
CYAN
						Valeur de retour
BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
		positive non nulle signifiera qu'il s'agit bien d'une lettre minuscule. La valeur
		0 indiquera qu'il ne s'agit pas d'une lettre minuscule.

JAUNE
		***************************************************************************************
  		*					Exemple de code                               *
  		*                                                                                     *
  		*	#include <ctype.h>                                                            *
  		*	#include <stdio.h>                                                            *
  		*	#include <stdlib.h>                                                           *
  		*	#include <string.h>                                                           *
  		*                                                                                     *
  		*	int main()                                                                    *
  		*	{                                                                             *
  		*                                                                                     *
  		*	     char buffer[80];                                                         *
  		* 	     printf( "Entre ton prenom : " );                                         *
  		*  	     scanf( "%s", buffer );                                                   *
  		*                                                                                     *
  		* 	     size_t length = strlen( buffer );                                        *
  		* 	     for( size_t i=0; i < length; i++ )                                       *
  		*           	  if ( islower( buffer[i] ) )                                         *
  		*          	     buffer[i] -= 32;  // equivalent à un appel à toupper             *
  		*                                                                                     *
  		*           printf( "Salut %s\n", buffer );                                           *
  		*                                                                                     *
  		*   	     return EXIT_SUCCESS;                                                     *
  		*	 }                                                                            *
  		*                                                                                     *
		***************************************************************************************
BLANC
FiN


isprint
JAUNE
				        *******************************
					*                             *
      					*int isprint( int character );*
					*                             *
					*******************************

BLANC
			Cette fonction permet de tester si un caractère s'affiche (is printable) ou non.
		Parmis ces caractères on retrouve l'ensemble des caractères ayant une représentation
		graphique (ceux pour qui la fonction isgraph retourne vrai) ainsi que le caractère
		d'espacement (de code 0x20). Autrement dit, il s'agit de l'ensemble des caractères
		ASCII, exceptés les caractères de contrôles (qui eux peuvent être vérifiés via la fonction iscntrl).
CYAN
					       Valeur de retour
BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
		positive non nulle signifiera qu'il s'agit bien d'un caractère pouvant s'afficher visuellement.
		La valeur 0 indiquera qu'il ne s'agit pas d'un caractère pouvant s'afficher.

JAUNE
		******************************************************************************************
  		*					Exemple de code                                  *
  		*                                                                                        *
  		*	#include <assert.h>                                                              *
  		*	#include <ctype.h>                                                               *
  		*	#include <stdio.h>                                                               *
  		*	#include <stdlib.h>                                                              *
  		*	#include <string.h>                                                              *
  		*                                                                                        *
  		*	int main()                                                                       *
  		*	{                                                                                *
  		*                                                                                        *
  		*	     char * originalString = "Hello\nWorld Final\tWord";                         *
  		* 	     size_t length = strlen( originalString );                                   *
  		* 	     size_t counter = 0;                                                         *
  		*                                                                                        *
  		* 	     for( size_t i=0; i<length; i++ )                                            *
  		*          	  if ( isprint( originalString[i] ) )                                    *
  		*		  {                                                                      *
  		*			printf( "%c", originalString[i] );                               *
  		*         		counter++;                                                       *
  		*      	   }                                                                       	 *
  		*                                                                                        *
  		*           printf( "\n" );                                                              *
  		*   	     assert( counter == 20 );                                                    *
  		*                                                                                        *
  		*  	     return EXIT_SUCCESS;                                                        *
  		*        }                                                                               *
  		*                                                                                        *
  		******************************************************************************************
BLANC
FiN


ispunct
JAUNE
						*******************************
						*                             *
						*int ispunct( int character );*
						*                             *
						*******************************

BLANC
			Cette fonction permet de tester si un caractère est considéré comme un caractère de
		ponctuation ASCII. Sont considérés comme caractères de ponctuation ASCII les caractères
		suivant : !"#$%&'()*+,-./:;<=>?@ [\]^_`{|}~. Cet ensemble de caractères correspond aux
		caractères ayant une représentation graphique (testable via la fonction isgraph) mais
		n'étant pas alpha-numérique (testable via la fonction isalnum).

CYAN
						Valeur de retour

BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive
		non nulle signifiera qu'il s'agit bien d'un caractère ASCII de ponctuation. La valeur 0 indiquera
		qu'il ne s'agit pas d'un caractère ASCII de ponctuation.

JAUNE
        *******************************************************************************************************
	*					Exemple de code                                               * 
  	*                                                                                                     *
  	*	#include <assert.h>                                                                           *
  	*	#include <ctype.h>                                                                            *
  	*	#include <stdio.h>                                                                            *
  	*	#include <stdlib.h>                                                                           *
  	*	#include <string.h>                                                                           *
  	*                                                                                                     *
  	*       int main()                                                                                    *
  	*	{                                                                                             *
  	*                                                                                                     *
  	*	      char * originalString = "Ceci est mon message : il est <<cool>>, n'est ce pas ?";       *
  	* 	      size_t length = strlen( originalString );                                               *
  	*  	      size_t counter = 0;                                                                     *
  	*                                                                                                     *
  	*  	      for( size_t i=0; i<length; i++ )                                                        *
  	*            	   if ( ispunct( originalString[i] ) )                                                *
  	*		   {                                                                                  *
  	*			printf( "%c", originalString[i] );                                            *
  	*         		counter ++;                                                                   *
  	*      	   }                                                                                          *
  	*                                                                                                     *
  	*           printf( "\n" );                                                                           *
  	*  	     assert( counter == 8 );                                                                  *
  	*                                                                                                     *
  	*  	     return EXIT_SUCCESS;                                                                     *
  	*	}                                                                                             *
  	*                                                                                                     *
  	*******************************************************************************************************
BLANC
FiN


isspace
JAUNE
					*******************************
					*                             *
        				*int isspace( int character );*
					*                             *
					*******************************
BLANC
		Cette fonction permet de tester si un caractère est considéré comme un caractère d'espacement
	ou non. Sont considérés comme caractères d'espacement les caractères suivants : '\t', '\n',
	'\v', '\f', '\r' et l'espace (' '). Comparé à la fonction isblank, la fonction isspace considère
	donc en plus les caractères '\n', '\v', '\f' et '\r'.

CYAN
						Valeur de retour

BLANC
		La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive non
	nulle signifiera qu'il s'agit bien d'un caractère d'espacement. La valeur 0 indiquera qu'il ne
	s'agit pas d'un caractère d'espacement.
JAUNE

		**************************************************************************************
  		*					Exemple de code                              *
  		*                                                                                    *
  		*	#include <ctype.h>                                                           *
  		*	#include <stdio.h>                                                           *
  		*	#include <stdlib.h>                                                          *
  		*                                                                                    *
  		*                                                                                    *
  		*	int main()                                                                   *
  		*	{                                                                            *
  		*                                                                                    *
  		*	       printf( "%d - %d\n", isblank( ' ' ), isspace( ' ' ) );                *
  		* 	       printf( "%d - %d\n", isblank( '\t' ), isspace( '\t' ) );              *
  		*  	       printf( "%d - %d\n", isblank( '\n' ), isspace( '\n' ) );              *
  		*  	       printf( "%d - %d\n", isblank( 'a' ), isspace( 'a' ) );                *
  		*                                                                                    *
  		*  	       return EXIT_SUCCESS;                                                  *
  		*	}                                                                            *
  		*                                                                                    *
  		*                                                                                    *
		**************************************************************************************
BLANC
FiN


isupper
JAUNE
				        *******************************
					*                             *
					*int isupper( int character );*
					*                             *
					*******************************
BLANC

			Cette fonction permet de tester si un caractère donné est une lettre majuscule ou non.
		Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
		Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
		De plus les caractères ne présentant même pas une lettre ne seront donc pas considérés
		comme une majuscule.

CYAN
						Valeur de retour

BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive
		non nulle signifiera qu'il s'agit bien d'une lettre majuscule. La valeur 0 indiquera
		qu'il ne s'agit pas d'une lettre majuscule.
JAUNE

		**************************************************************************************
  		*					Exemple de code                              *
  		*                                                                                    *
  		*	#include <ctype.h>                                                           *
  		*	#include <stdio.h>                                                           *
  		*	#include <stdlib.h>                                                          *
  		*	#include <string.h>                                                          *
  		*                                                                                    *
  		*	int main()                                                                   *
  		*	{                                                                            *
		*                                                                                    *
  		*	      char buffer[80];                                                       *
  		* 	      printf( "Entre ton nom : " );                                          *
  		*  	      scanf( "%s", buffer );                                                 *
   		*                                                                                    *
  		*  	      size_t length = strlen( buffer );                                      *
  		* 	      for( size_t i=0; i<length; i++ )                                       *
  		*            	   if ( isupper( buffer[i] ) )                                       *
  		*			buffer[i] +=32;  // equivalent à un appel à tolower          *
  		*                                                                                    *
  		*  	      printf( "Salut %s\n", buffer );                                        *
  		*                                                                                    *
  		*  	      return EXIT_SUCCESS;                                                   * 
  		*	}                                                                            *
  		*                                                                                    *
  		**************************************************************************************
BLANC
FiN


isxdigit
JAUNE
			        ********************************
				*                              *
				*int isxdigit( int character );*
				*                              *
				********************************
BLANC

			Cette fonction permet de tester si un caractère est un chiffre hexadécimal ou non. Pour rappel
		le système hexadécimal définit 16 chiffres : 0123456789ABCDEF.
CYAN

					Valeur de retour
BLANC
			La valeur de retour doit être interprétée en tant que valeur booléenne. une valeur positive
		non nulle signifiera qu'il s'agit bien d'un chiffre hexadécimal. La valeur 0 indiquera qu'il
		ne s'agit pas d'un chiffre hexadécimal.
JAUNE

			***********************************************************************************
  			*					Exemple de code                           *
  			*                                                                                 *
  			*	#include <ctype.h>                                                        *
  			*	#include <stdbool.h>                                                      *
  			*	#include <stdio.h>                                                        *
  			*	#include <stdlib.h>                                                       *
  			*	#include <string.h>                                                       *
  			*                                                                                 *
  			*	int main()                                                                *
  			*	{                                                                         *
  			*	     char buffer[80];                                                     *
  			*  	     printf( "Entre une  valeur hexadecimale : " );                       *
  			*  	     scanf( "%s", buffer );                                               *
  			*                                                                                 *
  			*  	     bool isCorrect = true;                                               *
  			*  	     size_t length = strlen( buffer );                                    *
			*  	     for( int i=0; i < length; i++ )                                      *
  			*           	  if ( ! isxdigit( buffer[i] ) )                                  *
  			*          	     isCorrect = false;                                           *
  			*                                                                                 *
  			*           if ( isCorrect )                                                      *
  			*	     {                                                                    *
  			*		printf( "Ton texte (%s) est un nombre hexadecimal \n", buffer );  *
  			*      	unsigned long value = strtoul( buffer, 0, 16 );                       	  *
  			*      	printf( "La valeur decimale  correspondante  est %zu\n", value );         *
  			*           }                                                                     *
  			*	                                                                          *
  			*  	     else                                                                 *
  		        *	  printf( "Ton texte (%s) n'est pas un nombre hexadecimal \n", buffer );  *
  			*                                                                                 * 
  			*           return EXIT_SUCCESS;                                                  *
  			*       }                                                                         *
  			*                                                                                 *
  			***********************************************************************************
BLANC
FiN


tolower
JAUNE
						*******************************
						*                             *
						*int tolower( int character );*
						*                             *
						*******************************
BLANC

				Cette fonction permet de convertir une lettre majuscule en une lettre minuscule.
			Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
			Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
CYAN

					    	 Valeur de retour
BLANC

				Cette fonction retourne le caractère équivalent transformé en minuscule, si le caractère
			passé en paramètre était une majuscule. Si le caractère passé n'était pas une majuscule,
			alors la fonction retourne le caractère inchangé. Le résultat doit bien entendu être considéré
			en tant que unsigned char.
JAUNE

			************************************************************************************
  			*					Exemple de code                            *
  			*                                                                                  *
  			*	#include <ctype.h>                                                         *
  			*	#include <stdio.h>                                                         *
  			*	#include <stdlib.h>                                                        *
  			*	#include <string.h>                                                        *
  			*                                                                                  *
  			*	char* strtolower( char* dest, const char* src )                            *
  			*	{                                                                          *
  			*		char* result = dest;                                               *
  			* 		while( *dest++ = tolower( *src++ ) );                              * 
  			*  		return result;                                                     *
  			*	}                                                                          *
  			*                                                                                  *
  			*	int main()                                                                 *
  			*	{                                                                          *
  			*                                                                                  *
  			*		char* input = "Diego De La Vega";                                  *
  			* 		char result[17];                                                   *
  			*                                                                                  *
  			*  		printf( "Resultat : %s\n", strtolower( result, input ) );          *
  			*                                                                                  *
  			*  		return EXIT_SUCCESS;                                               *
  			*	}                                                                          *
  			*                                                                                  *
  			************************************************************************************
BLANC
FiN


toupper
JAUNE

					        *******************************
						*                             *
						*int toupper( int character );*
						*                             *
						*******************************
BLANC

			Cette fonction permet de convertir une lettre minuscule en une lettre majuscule.
		Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
		Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
CYAN

						    Valeur de retour
BLANC

			Cette fonction retourne le caractère équivalent transformé en majuscule, si le caractère
		passé en paramètre était une minuscule. Si le caractère passé n'était pas une minuscule,
		alors la fonction retourne le caractère inchangé. Le résultat doit bien entendu être
		considéré en tant que unsigned char.
JAUNE


		********************************************************************************************
  		*					Exemple de code                                    *
  		*                                                                                          *
  		*	#include <ctype.h>                                                                 *
  		*	#include <stdio.h>                                                                 *
  		*	#include <stdlib.h>                                                                *
  		*	#include <string.h>                                                                *
  		*                                                                                          *
  		*	char* strtoupper( char* dest, const char* src )                                    *
  		*	{                                                                                  *
  		*		char* result = dest;                                                       *
  		*  		while( *dest++ = toupper( *src++ ) );                                      *
  		*  		return result;                                                             *
  		*	}                                                                                  *
  		*                                                                                          *
  		*	int main()                                                                         *
  		* 	{                                                                                  *
  		*                                                                                          *
  		*		char* input = "Diego De La Vega";                                          *
  		*  		char result[17];                                                           * 
  		*                                                                                          *
  		* 		printf( "Resultat: %s\n", strtoupper( result, input ) );                   *
  		*                                                                                          *
  		* 		return EXIT_SUCCESS;                                                       *
  		*	}                                                                                  *
  		*                                                                                          *
  		********************************************************************************************
BLANC
FiN





limits.h

JAUNE
CLI
		  **             *************   *            *    *************   *************    *************     
		  **                   *         *  *       * *          *               *          *
		  **                   *         *    *   *   *          *               *          *
		  **                   *         *      *     *          *               *          *************
		  **                   *         *            *          *               *                      *
		  **                   *         *            *          *               *                      *
		  ***********    *************   *            *    *************         *          *************            
BLANC


  
CYAN
                                    **                            **      
                                    **    Les limites des types   **
                                    **                            **      


BLANC
              *******************************************************************************************
       	      | ID  |         TYPE            |          MINIMUM         | 	      MAXIMUM	        |
	      *******************************************************************************************
	      |     |                         |                          |                              |
	      |	 1  |      _Bool              |             0            | 	        1	        |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |                              |
              |	 2  |       signed char       |           -127           |	       127 	        |
	      |     |                         |                          |                              |
              *******************************************************************************************
	      |     |                         |                          |	    	 	        |
	      |  3  |      unsigned char      |             0            |             255              |
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |                              |
	      |	 4  |          short          |          -32767          | 	      326767            |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |                              |
              |	 5  |     unsigned short      |             0            |	      65535             |
	      |     |                         |                          |                              |                             
	      *******************************************************************************************  	                      
	      |     |                         |                          |	    	 	        |
	      |  6  |          int            |          -32767          |            32767             |                             
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |                              |
	      |	 7  |      unsigned int       |             0            |  	      65535	        |   
	      |     |                         |                          |                              |                             
	      *******************************************************************************************
	      |     |                         |                          |                              |                      
              |	 8  |          long           |       -2 147 483 647     |	  2 147 483 647	        |   
	      |     |                         |                          |                              |                            
	      *******************************************************************************************  	                      
	      |     |                         |                          |	    	 	        |
	      |  9  |      unsigned long      |             0            |       4 294 967 295          |                             
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |	    	 	        |
	      | 10  |        long long        |-9 223 372 036 854 775 807|  9 223 372 036 854 775 807   |                             
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |                              |
	      |	11  |   unsigned long long    |             0            | 18 446 744 073 709 551 615   |   
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |                              |                             
              |	12  |         float           |       -1 × 10 E 37       |    	 1 × 10 E 37            |   
	      |     |                         |                          |                              |
 	      *******************************************************************************************  	                    
	      |     |                         |                          |	    	 	        |
	      | 13  |         double          |       -1 × 10 E 37       |       1 × 10 E 37            |                             
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |	    	 	        |
	      | 14  |        long double      |       -1 × 10 E 37       |       1 × 10 E 37            |
              |     |                         |                          |                              |
              *******************************************************************************************




CYAN
                                    **                            **
                                    **         Les macros         **
                                    **                            **



JAUNE


              *******************************************************************************************
       	      | ID  |         TYPE            |          MINIMUM         | 	      MAXIMUM		|	      
	      *******************************************************************************************
	      |     |                         |                          |                              |
	      |	 1  |      signed char        |        SCHAR_MIN         | 	    SCHAR_MAX	        |
	      |     |                         |                          |                              |                            
	      *******************************************************************************************
	      |     |                         |                          |                              |
              |	 2  |     unsigned char       |             0            |	    UCHAR_MAX	        |
	      |     |                         |                          |                              |
	      *******************************************************************************************
              |     |                         |                          |                              |
	      |  3  |         short           |         SHRT_MIN         |          SHRT_MAX            |
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |                              |
	      |	 4  |      unsigned short     |             0            | 	    USHRT_MAX	        |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |                              |
              |	 5  |          int            |         INT_MIN          |	    INT_MAX             |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |	    	 	        |
	      |  6  |     unsigned int        |             0            |          UINT_MAX            |
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |                              |
	      |	 7  |          long           |         LONG_MIN         | 	    LONG_MAX	        |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |                              |
              |	 8  |     unsigned long       |             0            |	    ULONG_MAX	        |
	      |     |                         |                          |                              |
	      *******************************************************************************************
	      |     |                         |                          |	    	 	        |
	      |  9  |       long long         |         LLONG_MIN        |          LLONG_MAX           |
              |     |                         |                          |                              |
              *******************************************************************************************
              |     |                         |                          |	    	 	        |
	      | 10  |    unsigned long long   |             0            |          ULLONG_MAX          |
              |     |                         |                          |                              |
              *******************************************************************************************








JAUNE

           **************************************************************************************************************************
           *							Exemple de code			                                    *
           *                                                                                                                        *
           *                #include<limits.h>                                                                                      *
           *                #include<stdio.h>                                                                                       *
           *                                                                                                                        *
           *                int main(void)                                                                                          *
           *                {                                                                                                       *
           *                        printf("Le nombre de bits dans un byte est %d", CHAR_BIT);                                      *
           *                                                                                                                        *
           *                        printf("La valeur minimale d'un char signé est : SIGNED CHAR =  %d", SCHAR_MIN);                *
           *                                                                                                                        *
           *                        printf("La valeur maximale d'un char signé est :  SIGNED CHAR = %d", SCHAR_MAX);                *
           *                                                                                                                        *
           *                        printf("La valeur maximale d'un  char non signé est: UNSIGNED CHAR =  %d", UCHAR_MAX);          *
           *                                                                                                                        *
           *                        printf("La valeur minimale d'un short int  est : SHORT INT =  %d", SHRT_MIN);                   *
           *                                                                                                                        * 
           *                        printf("La valeur maximale d'un short int  est : SHORT INT =  %d", SHRT_MAX);                   *
           *                                                                                                                        *
           *                        printf("La valeur minimale d'un int est : INT = %d", INT_MIN);                                  *
           *                                                                                                                        *
           *                        printf("La valeur maximale d'un int est : INT = %d", INT_MAX);                                  *
           *                                                                                                                        *
           *                        printf("La valeur minimale d'un char est : CHAR =  %d \n", SCHAR_MIN);                          *
           *                                                                                                                        *
           *                        printf("La valeur maximale d'un char est : CHAR =  %d \n", SCHAR_MAX);                          *
           *                                                                                                                        *
           *                        printf("La valeur minimale d'un long est : LONG = %ld \n",LONG_MIN);                            *
           *                                                                                                                        *
           *                        printf("La valeur maximale d'un long est : LONG = %ld \n", LONG_MAX);                           *
           *                                                                                                                        * 
           *                                                                                                                        *
           *                        return 0;                                                                                       *
           *                }                                                                                                       *
           *                                                                                                                        *
           **************************************************************************************************************************
BLANC
FiN
