Presentation
VERT

		/////////////////////////////////////////////////////////////////
		//                                                             //
		//        Présentation des librairie ctype.h et limit.h        //
		//                                                             //
		//                                                             //
		//                                                             //
		//                                                             //
		//  Etudiants: Dosseh David , Godonou Israel et Olou Yann      //
		//                                                             //
		/////////////////////////////////////////////////////////////////
		//                                                             //
		//                      Licence Informatique                   //
		/**                         IMSP - UAC                        **/
		//                                                             //
		/////////////////////////////////////////////////////////////////
BLANC
FiN

ctype.h

BLEU
CLI
		  ***********   *************  *       *   **********    ***********
		  *                   *         *     *    *        *    *
		  *                   *          *   *     *        *    *
		  *                   *            *       **********    *********
		  *                   *            *       *             *
		  *                   *            *       *             *
		  ***********         *            *       *             ***********
BLANC


    Cette librairie propose un ensemble de fonction de traitement de caractères. On peut classifier
cet ensemble de fonctions en deux catégories : les fonctions de tests, pour savoir si un caractère
est d'une certaine nature, et les fonctions de transformations, notamment utilent pour les changement
de casses (minuscules, majuscules).

   Attention : ces fonctions supportent uniquement la table d'encodage ASCII (American Standard
Coding for Information Interchange). Cette table ne définie que 128 caratcères (de code 0 à 127).
Ainsi, un caractère « é » (définit dans les standards ISO-8859-1, UTF-8, UTF-16, ...) ne sera pas
pris en compte : il n'est donc pas un caractère alpha-numérique.

CYAN
     	       	    Les fonctions de tests de caractères
		    
BLANC
     Ces fonctions sont très facile à identifier : elles sont toutes préfixées de is. Elles renvoient
 toutes une valeur entière typée int, mais vous devrait interpréter cette valeur en temps que booléen
 (true / false). Voici la liste des fonctions de cette catégorie. 
BLEU

       	      ************************************************************************************************************
              | id  |    Nom   |   Type     | 	      	       	   Description				      |	 Depuis  |
	      ************************************************************************************************************	 
	      |     |          |            |                                                                 |          |
	      |	 1  |  isalnum | fonction   |	Vérifie si un caractère est alpha-numérique. 		      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |	 2  |  isalpha | fonction   |	Vérifie si un caractère est alphabétique. 		      |	  C89	 |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
      	      |     |          |            |                                                                 |          |
	      |  3  |  isblank | fonction   |	Vérifie si un caractère est blanc ou non. 	 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  4  |  iscntrl | fonction   |	Vérifie si l'on a à faire à un caractère de contrôle. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  5  |  isdigit | fonction   |	Vérifie si un caractère est un chiffre. 		      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
	      |     |          |            |                                                                 |          |
	      |  6  |  isgraph | fonction   |	Vérifie si un caractère posséde une représentation graphique. |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  7  |  islower | fonction   | 	Vérifie si un caractère est une lettre minuscule. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  8  |  isprint | fonction   |	Vérifie si un caractère est affichable (printable) ou non.    |	  C89    |
	      |     |          |            |                                                                 |          |
              ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  9  |  ispunct | fonction   |	Vérifie si l'on a à faire à un caractère de ponctuation.      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
	      |     |          |            |                                                                 |          |
	      | 10  |  isspace | fonction   |  Vérifie si l'on a à faire à un caractère d'espacement. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
              ************************************************************************************************************ 
      	      |     |          |            |                                                                 |          |
	      | 11  |  isupper | fonction   |	Vérifie si un caractère est une lettre majuscule. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************  
	      |     |          |            |                                                                 |          |
	      |  12 |  isxdigit| fonction   |	Vérifie si un caractère est un chiffre hexadécimal. 	      |	  C89    |
	      |     |          |            |                                                                 |          |
	      ************************************************************************************************************
CYAN


			Les fonctions de transformations de caractères
			
BLEU
		 ********************************************************************************************************
		 | id  |  Nom       |	  Type	   |			Description			   |  Depuis    |
		 ********************************************************************************************************	  
		 |     |            |              |                                                       |            |
		 |  13 | tolower    |	fonction   |	Transforme une lettre majuscule en une minuscule.  |	C89     |
		 |     |            |              |                                                       |            |
		 ********************************************************************************************************	
		 |     |            |              |                                                       |            |
		 |  14 | toupper    |	fonction   |	Transforme une lettre minuscule en une majuscule.  |	C89     |
		 |     |            |              |                                                       |            |
		 ********************************************************************************************************
BLANC
FiN


isalnum
BLEU
               *********************************
	       *                               *
	       * int isalnum( int character ); *
	       *                               *
               *********************************
BLANC

Cette fonction permet de tester si un caractère est alpha-numérique ou non.
Un caractère sera considéré comme alpha-numérique s'il est une lettre
(minuscule ou majuscule) ou un chiffre. Rappel : les fonctions de cette
librairie ne traitent que les caractères purs ASCII. Les lettres accentuées
ne seront donc pas considérées comme des caractères alpha-numériques.

CYAN
   Valeur de retour
   
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne.
Une valeur positive non nulle signifira qu'il s'agit bien d'un caractère
alpha-numérique. La valeur 0 indiquera qu'il ne s'agit pas d'un caractère
apha-numérique.
ROUGE

  **********************************************************************************
  *				Exemple de code			                   *
  *                                                                                *
  *	    #include <ctype.h>                                                     *
  *	    #include <stdbool.h>                                                   *
  *	    #include <stdio.h>                                                     *
  *	    #include <stdlib.h>                                                    *
  *	    #include <string.h>                                                    *
  *                                                                                *
  *	    int main()                                                             *
  *	    {                                                                      *
  *                                                                                *
  *		char buffer[80];                                                   *
  *		printf( "Enter your login (only alpha-numeric characters) : " );   *
  * 		scanf( "%s", buffer );                                             *
  *                                                                                *
  *  		bool isCorrect = true;                                             *
  *  		size_t length = strlen( buffer );                                  *
  *		                                                                   *
  *  		for( int i=0; i<length; i++ )                                      *
  *		     if ( isalnum( buffer[i] ) == false )                          *
  *          	     	isCorrect = false;                                         *
  *                                                                                *
  *		if ( isCorrect )                                                   *
  *      	   printf( "Your login is correct\n" );                            *
  *                                                                                *
  *		else                                                               *
  *		   printf( "Your login is not correct\n" );                        *
  *		                                                                   *
  *		return EXIT_SUCCESS;                                               *
  *	     }		                                                           *
  *                                                                                *
  **********************************************************************************
BLANC
FiN


isalpha
BLEU
        ********************************
	*                              *
	* int isalpha( int character );*
	*                              *
	********************************
BLANC

Cette fonction permet de tester si un caractère est alphabétique ou non.
Un caractère sera considéré comme alphabétique s'il est de lettres minuscules
ou de lettres majuscules. Rappel : les fonctions de cette librairie ne traitent
que les caractères purs ASCII. Les lettres accentuées ne seront donc pas considérées
comme des caractères alpha-numériques.

CYAN
      Valeur de retour
      
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira qu'il s'agit bien d'un caractère alphabétique. La valeur
0 indiquera qu'il ne s'agit pas d'un caractère aphabétique.

ROUGE
  ****************************************************************************************
  *				     Exemple de code                                     *
  *                                                                                      *
  *	#include <ctype.h>                                                               *
  * 	#include <stdbool.h>                                                             *
  *	#include <stdio.h>                                                               *
  *	#include <stdlib.h>                                                              *
  *	#include <string.h>                                                              *
  *                                                                                      *
  *	int main()                                                                       *
  *	{                                                                                *
  *	     char buffer[80];                                                            *
  *	     printf( "Enter your last name : " );                                        *
  *  	     scanf( "%[^\n]", buffer );                                                  *
  *                                                                                      *
  * 	     bool isCorrect = true;                                                      *
  * 	     size_t length = strlen( buffer );                                           *
  *                                                                                      *
  *	     for( int i=0; i<length; i++ )                                               *
  *          	  if ( isalpha( buffer[i] ) == false && isblank( buffer[i] ) == false )  *
  *          	     isCorrect = false;	                                                 *
  *                                                                                      *
  *          if ( isCorrect )                                                            *
  *           	  printf( "Your last name (%s) is correct\n", buffer );                  *
  *                                                                                      *
  *	     else                                                                        *
  *	     	  printf( "Your last name (%s) is not correct\n", buffer );              *
  *                                                                                      *
  *           return EXIT_SUCCESS;                                                       *
  *	}                                                                                *
  *                                                                                      *
  ****************************************************************************************
BLANC
FiN


isblank
BLEU
        *******************************
	*                             *
	*int isblank( int character );*
	*                             *
	*******************************
BLANC

Cette fonction permet de tester si un caractère est blanc ou non.
Deux caractères sont considérés comme des blancs : l'espace et la tabulation.
Par contre, un retour à la ligne ne sera pas considéré comme un caractère blanc.
La fonction isspace est relativement proche, cepedant cette dernière valide plus
de caractères et notamment ceux relatifs aux retours à la ligne (en fonction du
système d'exploitation considéré).

CYAN
	Valeur de retour
	
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira qu'il s'agit bien d'un caractère blanc. La valeur 0
indiquera qu'il ne s'agit pas d'un caractère blanc.

ROUGE
  *******************************************************************************
  *				Exemple de code                                 *
  *                                                                             *
  *	#include <ctype.h>                                                      *
  * 	#include <stdio.h>                                                      *
  *	#include <stdlib.h>                                                     *
  *                                                                             *
  *                                                                             *
  *	int main()                                                              *
  *	{                                                                       *
  *                                                                             *
  *	    printf( "%d\n", isblank( ' ' ) );                                   *
  * 	    printf( "%d\n", isblank( '\t' ) );                                  *
  *  	    printf( "%d\n", isblank( '\n' ) );                                  *
  *                                                                             *
  *  	    return EXIT_SUCCESS;                                                *
  *	}                                                                       *
  *                                                                             *
  *******************************************************************************
BLANC
FiN


iscntrl
BLEU
        *******************************
	*                             *
        *int iscntrl( int character );*
	*                             *
	*******************************
BLANC

Le standard ASCII (American Standard Code for Information Interchange), dont dérive
tous les autres systèmes de codages de caractères, définit 33 caractères de contrôles.
Ces caractères ont leurs codes numériques compris en 0 et 31 plus la valeur 127.
Le tableau ci-dessous rappelle ces codes ainsi que leurs significations.
La fonction iscntrl permet donc de savoir si un caractère ASCII fait partie de cet ensemble ou non.

CYAN
   Valeur de retour
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifiera qu'il s'agit bien d'un caractère de contrôle.
La valeur 0 indiquera qu'il ne s'agit pas d'un caractère de contrôle.

ROUGE
  ******************************************************************************************
  *					    Exemple de code                                *
  *                                                                                        *
  *	#include <ctype.h>                                                                 *
  *	#include <stdio.h>                                                                 *
  *	#include <stdlib.h>                                                                *
  *                                                                                        *
  * 	size_t strcpyWithoutControlCharacters( char * dest, const char * source )          *
  *	{                                                                                  *
  *                                                                                        *
  *	    size_t counter = 0;                                                            *
  * 	    char currentCharacter;                                                         *
  * 	    do                                                                             *
  *	    {                                                                              *
  *		currentCharacter = *source++;                                              *
  *       	if ( ! iscntrl( currentCharacter ) )                                       *
  *		{                                                                          *
  *		    *dest++ = currentCharacter;                                            *
  *          	    counter ++;                                                            *
  *     	}                                                                          *
  *          }while ( currentCharacter != '\0' );                                          *
  *                                                                                        *
  *          *dest = '\0';                                                                 *
  *                                                                                        *
  *  	    return counter;                                                                *
  *	}                                                                                  *
  *                                                                                        *
  *	int main()                                                                         *
  *	{                                                                                  *
  *                                                                                        *
  *	     const char * original = "Hello\tWorld\nBye\r";                                *
  *          char buffer[ 20 ];                                                            *
  *                                                                                        *
  *    	     size_t length = strcpyWithoutControlCharacters( buffer, original );           *
  *                                                                                        *
  *  	     printf( "strlen(\"%s\") == %zu\n", buffer, length );                          *
  *                                                                                        *
  *  	     return EXIT_SUCCESS;                                                          *
  *	}                                                                                  *
  *                                                                                        *
  ******************************************************************************************
BLANC
FiN


isdigit
BLEU
        *******************************
	*                             *
        *int isdigit( int character );*
	*                             *
	*******************************
BLANC
Cette fonction permet de tester si un caractère est un chiffre décimal ou non.

CYAN
      Valeur de retour
      
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira qu'il s'agit bien d'un chiffre décimal. La valeur 0
indiquera qu'il ne s'agit pas d'un chiffre décimal.
ROUGE

  ******************************************************************************
  *				Exemple de code                                *
  *                                                                            *
  *	#include <ctype.h>                                                     *
  *	#include <stdbool.h>                                                   *
  *	#include <stdio.h>                                                     *
  *	#include <stdlib.h>                                                    *
  *	#include <string.h>                                                    *
  *                                                                            *
  *	int main()                                                             *
  *	{                                                                      *
  *                                                                            *
  *	    char buffer[80];                                                   *
  * 	    printf( "Enter your text : " );                                    *
  *  	    scanf( "%[^\n]", buffer );                                         *
  *                                                                            *
  *  	    bool isCorrect = true;                                             *
  *  	    size_t length = strlen( buffer );                                  *
  *  	    for( int i=0; i<length; i++ )                                      *
  *		if ( ! isdigit( buffer[i] ) )                                  *
  *          	   isCorrect = false;                                          *
  *                                                                            *
  *  	    if ( isCorrect )                                                   *
  *              printf( "Your text (%s) is a number\n", buffer );             *
  *                                                                            *
  *	    else                                                               *
  *		printf( "Your text (%s) is not a number\n", buffer );          *
  *                                                                            *
  *          return EXIT_SUCCESS;                                              *
  *     }                                                                      *
  *                                                                            *
  ******************************************************************************
BLANC
FiN


isgraph
BLEU
        *******************************
	*                             *
	*int isgraph( int character );*
	*                             *
	*******************************
BLANC

Cette fonction permet de tester si un caractère possède une représentation graphique
ou non. Les caractères ASCII, exceptés les caractères de contrôles et le caractère
d'espace, ont une représentation graphique (visuelle).

CYAN
	  Valeur de retour

BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira qu'il s'agit bien d'un caractère possédant une représentation
graphique. La valeur 0 indiquera qu'il ne s'agit pas d'un caractère ayant une représentation visuelle.
ROUGE

  *****************************************************************************************
  *					Exemple de code                                   *
  *                                                                                       *
  *	#include <assert.h>                                                               *
  *	#include <ctype.h>                                                                *
  *	#include <stdio.h>                                                                *
  *	#include <stdlib.h>                                                               *
  *	#include <string.h>                                                               *
  *                                                                                       *
  *	int main()                                                                        *
  *	{                                                                                 *
  *                                                                                       *
  *	      char * originalString = "Hello\nWorld Final\tWord";                         *
  * 	      size_t length = strlen( originalString );                                   *
  * 	      size_t counter = 0;                                                         *
  *                                                                                       *
  * 	      for( size_t i=0; i<length; i++ )                                            *
  *           	   if ( isgraph( originalString[i] ) )                                    *  
  *		   {                                                                      *
  *			printf( "%c", originalString[i] );                                *
  *         		counter ++;                                                       *
  *     	   }                                                                      *
  *                                                                                       *
  *           printf( "\n" );                                                             *
  *           assert( counter == 19 );                                                    *
  *                                                                                       *
  *           return EXIT_SUCCESS;                                                        *
  *      }                                                                                *
  *                                                                                       *
  *****************************************************************************************
BLANC
FiN


islower
BLEU
        *******************************
	*                             *
        *int islower( int character );*
	*                             *
	*******************************

BLANC
Cette fonction permet de tester si un caractère donné est une lettre minuscule ou non.
Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
De plus les caractères ne preprésentant même pas une lettre ne seront donc pas considérés comme une minuscule.
CYAN
   Valeur de retour
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira cond qu'il s'agit bien d'une lettre minuscule. La valeur
0 indiquera qu'il ne s'agit pas d'une lettre minuscule.

ROUGE
  ***************************************************************************************
  *					Exemple de code                                 *
  *                                                                                     *
  *	#include <ctype.h>                                                              *
  *	#include <stdio.h>                                                              *
  *	#include <stdlib.h>                                                             *
  *	#include <string.h>                                                             *
  *                                                                                     *
  *	int main()                                                                      *
  *	{                                                                               *
  *                                                                                     *
  *	     char buffer[80];                                                           *
  * 	     printf( "Enter your last name : " );                                       *
  *  	     scanf( "%[^\n]", buffer );                                                 *
  *                                                                                     *
  * 	     size_t length = strlen( buffer );                                          *
  * 	     for( size_t i=0; i<length; i++ )                                           *
  *           	  if ( islower( buffer[i] ) )                                           *
  *          	     buffer[i] &= 223;  // equivalent à un appel à toupper              *
  *                                                                                     *
  *           printf( "Hello %s\n", buffer );                                           *
  *                                                                                     *
  *   	     return EXIT_SUCCESS;                                                       *
  *	 }                                                                              *
  *                                                                                     *
  ***************************************************************************************
BLANC

Afin de mieux comprendre cet exemple, une petite précision peut être utile. Dans la table
ASCII, les lettres majuscules et les lettres minuscules ont leurs codes numériques espacés
de 32 unités. Ainsi le caractère 'A' a comme code numérique 65 alors que le caractère 'a'
a comme code numérique 97. En fait, la valeur 32 correspond à 25 : donc la présence ou non
d'un bit permet de passer d'une plage de caractères à l'autre. Ce choix est historique : à
l'époque, exécuter des opérations numériques (ajout, sustraction) prenait plus de cycles CPU
que l'exécution d'opérations binaires (opérations AND, OR, ...). Dans notre exemple, on fait
un masque binaire AND sur la valeur numérique du caractère considéré en supprimant le sixième
bit (255 - 32 = 223) : si l'on a une lettre minuscule, on passera donc bien à une lettre majuscule. 

FiN


isprint
BLEU
        *******************************
	*                             *
      	*int isprint( int character );*
	*                             *
	*******************************

BLANC
Cette fonction permet de tester si un caractère s'affiche (is printable) ou non.
Parmis ces caractères on retrouve l'ensemble des caractères ayant une représentation
graphique (ceux pour qui la fonction isgraph retourne vrai) ainsi que le caractère
d'espacement (de code 0x20). Autrement dit, il s'agit de l'ensemble des caractères
ASCII, exceptés les caractères de contrôles (qui eux peuvent être vérifiés via la fonction iscntrl).
CYAN
       Valeur de retour
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur
positive non nulle signifira qu'il s'agit bien d'un caractère pouvant s'afficher visuellement.
La valeur 0 indiquera qu'il ne s'agit pas d'un caractère pouvant s'afficher.

ROUGE
  ******************************************************************************************
  *					Exemple de code                                    *
  *                                                                                        *
  *	#include <assert.h>                                                                *
  *	#include <ctype.h>                                                                 *
  *	#include <stdio.h>                                                                 *
  *	#include <stdlib.h>                                                                *
  *	#include <string.h>                                                                *
  *                                                                                        *
  *	int main()                                                                         *
  *	{                                                                                  *
  *                                                                                        *
  *	     char * originalString = "Hello\nWorld Final\tWord";                           *
  * 	     size_t length = strlen( originalString );                                     *
  * 	     size_t counter = 0;                                                           *
  *                                                                                        *
  * 	     for( size_t i=0; i<length; i++ )                                              *
  *          	  if ( isprint( originalString[i] ) )                                      *
  *		  {                                                                        *
  *			printf( "%c", originalString[i] );                                 *
  *         		counter ++;                                                        *
  *      	   }                                                                       *
  *                                                                                        *
  *           printf( "\n" );                                                              *
  *   	     assert( counter == 20 );                                                      *
  *                                                                                        *
  *  	     return EXIT_SUCCESS;                                                          *
  *        }                                                                               *
  *                                                                                        *
  ******************************************************************************************
BLANC
FiN


ispunct
BLEU
        *******************************
	*                             *
	*int ispunct( int character );*
	*                             *
	*******************************

BLANC
Cette fonction permet de tester si un caractère est considérés comme un caractère de
ponctuattion ASCII. Sont considérés comme caractères de ponctuation ASCII les caractères
suivant : !"#$%&'()*+,-./:;<=>?@ [\]^_`{|}~. Cet ensemble de caractères correspond aux
caractères ayant une représentation graphique (testable via la fonction isgraph) mais
n'étant pas alpha-numérique (testable via la fonction isalnum).

CYAN
	Valeur de retour

BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive
non nulle signifira qu'il s'agit bien d'un caractère ASCII de ponctuation. La valeur 0 indiquera
qu'il ne s'agit pas d'un caractère ASCII de ponctuation.

ROUGE
  *******************************************************************************************************
  *					Exemple de code                                                 * 
  *                                                                                                     *
  *	#include <assert.h>                                                                             *
  *	#include <ctype.h>                                                                              *
  *	#include <stdio.h>                                                                              *
  *	#include <stdlib.h>                                                                             *
  *	#include <string.h>                                                                             *
  *                                                                                                     *
  *	int main()                                                                                      *
  *	{                                                                                               *
  *                                                                                                     *
  *	      char * originalString = "Ceci est mon message : il est <<cool>>, n'est ce pas ?";         *
  * 	      size_t length = strlen( originalString );                                                 *
  *  	      size_t counter = 0;                                                                       *
  *                                                                                                     *
  *  	      for( size_t i=0; i<length; i++ )                                                          *
  *            	   if ( ispunct( originalString[i] ) )                                                  *
  *		   {                                                                                    *
  *			printf( "%c", originalString[i] );                                              *
  *         		counter ++;                                                                     *
  *      	   }                                                                                    *
  *                                                                                                     *
  *           printf( "\n" );                                                                           *
  *  	     assert( counter == 8 );                                                                    *
  *                                                                                                     *
  *  	     return EXIT_SUCCESS;                                                                       *
  *	}                                                                                               *
  *                                                                                                     *
  *******************************************************************************************************
BLANC
FiN


isspace
BLEU
        *******************************
	*                             *
        *int isspace( int character );*
	*                             *
	*******************************
BLANC
Cette fonction permet de tester si un caractère est considéré comme un caractère d'espacement
ou non. Sont considérés comme caractères d'espacement les caractères suivants : '\t', '\n',
'\v', '\f', '\r' et l'espace (' '). Comparé à la fonction isblank, la fonction isspace considère
donc en plus les caractères '\n', '\v', '\f' et '\r'.

CYAN
     Valeur de retour

BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive non
nulle signifira qu'il s'agit bien d'un caractère d'espacement. La valeur 0 indiquera qu'il ne
s'agit pas d'un caractère d'espacement.
ROUGE

  **************************************************************************************
  *					Exemple de code                                *
  *                                                                                    *
  *	#include <ctype.h>                                                             *
  *	#include <stdio.h>                                                             *
  *	#include <stdlib.h>                                                            *
  *                                                                                    *
  *                                                                                    *
  *	int main()                                                                     *
  *	{                                                                              *
  *                                                                                    *
  *	       printf( "%d - %d\n", isblank( ' ' ), isspace( ' ' ) );                  *
  * 	       printf( "%d - %d\n", isblank( '\t' ), isspace( '\t' ) );                *
  *  	       printf( "%d - %d\n", isblank( '\n' ), isspace( '\n' ) );                *
  *  	       printf( "%d - %d\n", isblank( 'a' ), isspace( 'a' ) );                  *
  *                                                                                    *
  *  	       return EXIT_SUCCESS;                                                    *
  *	}                                                                              *
  *                                                                                    *
  *                                                                                    *
  **************************************************************************************
BLANC
FiN


isupper
BLEU
        *******************************
	*                             *
	*int isupper( int character );*
	*                             *
	*******************************
BLANC

Cette fonction permet de tester si un caractère donné est une lettre majuscule ou non.
Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
De plus les caractères ne preprésentant même pas une lettre ne seront donc pas considérés
comme une majuscule.

CYAN
   Valeur de retour

BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. Une valeur positive
non nulle signifira cond qu'il s'agit bien d'une lettre majuscule. La valeur 0 indiquera
qu'il ne s'agit pas d'une lettre majuscule.
ROUGE

  **************************************************************************************
  *					Exemple de code                                *
  *                                                                                    *
  *	#include <ctype.h>                                                             *
  *	#include <stdio.h>                                                             *
  *	#include <stdlib.h>                                                            *
  *	#include <string.h>                                                            *
  *                                                                                    *
  *	int main()                                                                     *
  *	{                                                                              *
  *                                                                                    *
  *	      char buffer[80];                                                         *
  * 	      printf( "Enter your last name : " );                                     *
  *  	      scanf( "%[^\n]", buffer );                                               *
  *                                                                                    *
  *  	      size_t length = strlen( buffer );                                        *
  * 	      for( size_t i=0; i<length; i++ )                                         *
  *            	   if ( isupper( buffer[i] ) )                                         *
  *			buffer[i] |= 32;  // equivalent à un appel à tolower           *
  *                                                                                    *
  *  	      printf( "Hello %s\n", buffer );                                          *
  *                                                                                    *
  *  	      return EXIT_SUCCESS;                                                     * 
  *	}                                                                              *
  *                                                                                    *
  **************************************************************************************
BLANC

Afin de mieux comprendre cet exemple, une petite précision peut être utile. Dans la table
ASCII, les lettres majuscules et les lettres minuscules ont leurs codes numériques espacés
de 32 unités. Ainsi le caractère 'A' a comme code numérique 65 alors que le caractère 'a'
a comme code numérique 97. En fait, la valeur 32 correspond à 25 : donc la présence ou non
d'un bit permet de passer d'une plage de caractères à l'autre. Ce choix est historique : à
l'époque, exécuter des opérations numériques (ajout, sustraction) prenait plus de cycles CPU
que l'exécution d'opérations binaires (opérations AND, OR, ...). Dans notre exemple, on fait
un masque binaire OR sur la valeur numérique du caractère considéré en ajoutant le sixième
bit : si l'on a une lettre majuscule, on passera donc bien à une lettre minuscule. 

FiN


isxdigit
BLEU
        ********************************
	*                              *
	*int isxdigit( int character );*
	*                              *
	********************************
BLANC

Cette fonction permet de tester si un caractère est un chiffre hexadécimal ou non. Pour rappel
le système hexadécimal définit 16 chiffres : 0123456789ABCDEF.
CYAN

   Valeur de retour
BLANC
La valeur de retour doit être interprétée en tant que valeur booléenne. une valeur positive
non nulle signifira qu'il s'agit bien d'un chiffre hexadécimal. La valeur 0 indiquera qu'il
ne s'agit pas d'un chiffre hexadécimal.
ROUGE

  ***********************************************************************************
  *					Exemple de code                             *
  *                                                                                 *
  *	#include <ctype.h>                                                          *
  *	#include <stdbool.h>                                                        *
  *	#include <stdio.h>                                                          *
  *	#include <stdlib.h>                                                         *
  *	#include <string.h>                                                         *
  *                                                                                 *
  *	int main()                                                                  *
  *	{                                                                           *
  *	     char buffer[80];                                                       *
  *  	     printf( "Enter a hexadecimal value : " );                              *
  *  	     scanf( "%[^\n]", buffer );                                             *
  *                                                                                 *
  *  	     bool isCorrect = true;                                                 *
  *  	     size_t length = strlen( buffer );                                      *
  *  	     for( int i=0; i<length; i++ )                                          *
  *           	  if ( ! isxdigit( buffer[i] ) )                                    *
  *          	     isCorrect = false;                                             *
  *                                                                                 *
  *           if ( isCorrect )                                                      *
  *	     {                                                                      *
  *		printf( "Your text (%s) is a hexadecimal number\n", buffer );       *
  *      	unsigned long value = strtoul( buffer, 0, 16 );                     *
  *      	printf( "The corresponding decimal value is %zu\n", value );        *
  *           }                                                                     *
  *	                                                                            *
  *  	     else                                                                   *
  *	         printf( "Your text (%s) is not a hexadecimal number\n", buffer );  *
  *                                                                                 * 
  *           return EXIT_SUCCESS;                                                  *
  *       }                                                                         *
  *                                                                                 *
  ***********************************************************************************
BLANC
FiN


tolower
BLEU
        *******************************
	*                             *
	*int tolower( int character );*
	*                             *
	*******************************
BLANC

Cette fonction permet de convertir une lettre majuscule à une lettre minuscule.
Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
CYAN

    	 Valeur de retour
BLANC

Cette fonction retourne le caractère équivalent transformé en minuscule, si le caractère
passé en paramètre était une majuscule. Si le caractère passé n'était pas une majuscule,
alors la fonction retourne le caractère inchangé. Le résultat doit bien entendu être considéré
en tant que unsigned char, néanmoins la fonction peut -1 si EOF a été fournit en paramètre.
ROUGE

  ************************************************************************************
  *					Exemple de code                              *
  *                                                                                  *
  *	#include <ctype.h>                                                           *
  *	#include <stdio.h>                                                           *
  *	#include <stdlib.h>                                                          *
  *	#include <string.h>                                                          *
  *                                                                                  *
  *	char * strtolower( char * dest, const char * src )                           *
  *	{                                                                            *
  *		char * result = dest;                                                *
  * 		while( *dest++ = tolower( *src++ ) );                                * 
  *  		return result;                                                       *
  *	}                                                                            *
  *                                                                                  *
  *	int main()                                                                   *
  *	{                                                                            *
  *                                                                                  *
  *		char * input = "Diego De La Vega";                                   *
  * 		char result[17];                                                     *
  *                                                                                  *
  *  		printf( "Result: %s\n", strtolower( result, input ) );               *
  *                                                                                  *
  *  		return EXIT_SUCCESS;                                                 *
  *	}                                                                            *
  *                                                                                  *
  ************************************************************************************
BLANC
FiN


toupper
BLEU

        *******************************
	*                             *
	*int toupper( int character );*
	*                             *
	*******************************
BLANC

Cette fonction permet de convertir une lettre minuscule à une lettre majuscule.
Rappel : les fonctions de cette librairie ne traitent que les caractères purs ASCII.
Les lettres accentuées ne seront donc pas considérées comme des caractères alpha-numériques.
CYAN

    Valeur de retour
BLANC

Cette fonction retourne le caractère équivalent transformé en majuscule, si le caractère
passé en paramètre était une minuscule. Si le caractère passé n'était pas une minuscule,
alors la fonction retourne le caractère inchangé. Le résultat doit bien entendu être
considéré en tant que unsigned char, néanmoins la fonction peut -1 si EOF a été fournit en paramètre.
ROUGE


  ********************************************************************************************
  *					Exemple de code                                      *
  *                                                                                          *
  *	#include <ctype.h>                                                                   *
  *	#include <stdio.h>                                                                   *
  *	#include <stdlib.h>                                                                  *
  *	#include <string.h>                                                                  *
  *                                                                                          *
  *	char * strtoupper( char * dest, const char * src )                                   *
  *	{                                                                                    *
  *		char * result = dest;                                                        *
  *  		while( *dest++ = toupper( *src++ ) );                                        *
  *  		return result;                                                               *
  *	}                                                                                    *
  *                                                                                          *
  *	int main()                                                                           *
  * 	{                                                                                    *
  *                                                                                          *
  *		char * input = "Diego De La Vega";                                           *
  *  		char result[17];                                                             * 
  *                                                                                          *
  * 		printf( "Result: %s\n", strtoupper( result, input ) );                       *
  *                                                                                          *
  * 		return EXIT_SUCCESS;                                                         *
  *	}                                                                                    *
  *                                                                                          *
  ********************************************************************************************
BLANC
FiN
